package org.irri.breedingtool.graphs.dialog;

import org.eclipse.jface.dialogs.Dialog;
import org.eclipse.jface.dialogs.IDialogConstants;
import org.eclipse.swt.graphics.Point;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Control;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.SWT;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.TabFolder;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.widgets.TabItem;
import org.eclipse.swt.widgets.Combo;
import org.eclipse.swt.widgets.List;
import org.eclipse.swt.widgets.Text;
import org.eclipse.swt.widgets.Table;
import org.eclipse.swt.widgets.TableColumn;
import org.eclipse.swt.widgets.Spinner;
import org.eclipse.swt.widgets.Group;

public class NewBarGraphDialog extends Dialog {
	private Text text;
	private Text txtGroupBy;
	private Button btnRawData;
	private Button btnSummaryStatistics;
	private Combo cmbBarRepresents;
	private List lstNumericVariables;
	private List lstVariables;
	private Button btnSetToFactor;
	private Button btnVariables;
	private List lstFactors;
	private Button btnCategorizedBy;
	private Button btnClusterBarsBy;
	private List lstClusterBarsBy;
	private Button btnGroupBy;
	private Text txtMainTitle;
	private Text txtCategoryAxisLabel;
	private Table tblValueAxis;
	private Text txtLegendTitle;
	private Combo cmbOrientation;
	private Spinner sprTotalRows;
	private Spinner sprTotalColumns;
	private Button btnDisplayMultipleGraphs;
	private Combo combo;
	private Combo combo_1;
	private Button btnDrawBoxAround;
	private Button btnShowLegend;
	private Combo cmbAxisLabelOrientation;
	private Button btnDisplayLevels;
	private Table tblColorAndFill;
	private Button btnDisplayErrorBars;
	private Button btnConfidenceLevel;
	private Spinner sprConfidenceLevel;
	private Spinner sprStandardErrorMultiplier;
	private Spinner sprStandardDeviationMultiplier;
	private Button btnStandardDeviation;
	private Button btnStandardError;
	private Button btnOrientationVertical;
	private Button btnOrientationHorizontal;
	private Button btnStyleClustered;
	private Button btnStyleStacked;

	/**
	 * Create the dialog.
	 * @param parentShell
	 */
	public NewBarGraphDialog(Shell parentShell) {
		super(parentShell);
		setShellStyle(SWT.BORDER | SWT.CLOSE | SWT.MIN | SWT.RESIZE);
	}

	/**
	 * Create contents of the dialog.
	 * @param parent
	 */
	@Override
	protected Control createDialogArea(Composite parent) {
		Composite container = (Composite) super.createDialogArea(parent);
		GridLayout gridLayout = (GridLayout) container.getLayout();
		
		TabFolder tabFolder = new TabFolder(container, SWT.NONE);
		tabFolder.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true, 1, 1));
		
		TabItem tbtmVariableDefinition = new TabItem(tabFolder, SWT.NONE);
		tbtmVariableDefinition.setText("Variable Definition");
		
		Composite composite = new Composite(tabFolder, SWT.NONE);
		tbtmVariableDefinition.setControl(composite);
		composite.setLayout(new GridLayout(4, false));
		
		Label lblInputFileContains = new Label(composite, SWT.NONE);
		lblInputFileContains.setText("Input File Contains:");
		
		btnRawData = new Button(composite, SWT.RADIO);
		btnRawData.setLayoutData(new GridData(SWT.LEFT, SWT.CENTER, true, false, 1, 1));
		btnRawData.setText("Raw Data");
		new Label(composite, SWT.NONE);
		
		btnSummaryStatistics = new Button(composite, SWT.RADIO);
		btnSummaryStatistics.setLayoutData(new GridData(SWT.LEFT, SWT.CENTER, true, false, 1, 1));
		btnSummaryStatistics.setText("Summary Statistics");
		
		Label lblBarRepresents = new Label(composite, SWT.NONE);
		lblBarRepresents.setLayoutData(new GridData(SWT.RIGHT, SWT.CENTER, false, false, 1, 1));
		lblBarRepresents.setText("Bar Represents:");
		
		cmbBarRepresents = new Combo(composite, SWT.NONE);
		cmbBarRepresents.setItems(new String[] {"Mean", "Median", "Sum"});
		cmbBarRepresents.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false, 1, 1));
		cmbBarRepresents.setText("Mean");
		new Label(composite, SWT.NONE);
		new Label(composite, SWT.NONE);
		
		Label lblNumericVariables = new Label(composite, SWT.NONE);
		lblNumericVariables.setText("Numeric Variables:");
		new Label(composite, SWT.NONE);
		new Label(composite, SWT.NONE);
		
		Label lblVariables = new Label(composite, SWT.NONE);
		lblVariables.setText("Variable(s):");
		
		lstNumericVariables = new List(composite, SWT.BORDER);
		lstNumericVariables.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true, 2, 1));
		
		btnVariables = new Button(composite, SWT.NONE);
		GridData gd_btnVariables = new GridData(SWT.FILL, SWT.CENTER, false, false, 1, 1);
		gd_btnVariables.widthHint = 96;
		btnVariables.setLayoutData(gd_btnVariables);
		btnVariables.setText("Add");
		
		lstVariables = new List(composite, SWT.BORDER);
		GridData gd_lstVariables = new GridData(SWT.FILL, SWT.FILL, true, true, 1, 1);
		gd_lstVariables.widthHint = 250;
		lstVariables.setLayoutData(gd_lstVariables);
		
		Label lblFactors = new Label(composite, SWT.NONE);
		lblFactors.setText("Factors:");
		
		btnSetToFactor = new Button(composite, SWT.NONE);
		btnSetToFactor.setLayoutData(new GridData(SWT.RIGHT, SWT.CENTER, false, false, 1, 1));
		btnSetToFactor.setText("Set to Factor");
		new Label(composite, SWT.NONE);
		
		Label lblCategorizedBy = new Label(composite, SWT.NONE);
		lblCategorizedBy.setText("Categorized by:");
		
		lstFactors = new List(composite, SWT.BORDER);
		lstFactors.setLayoutData(new GridData(SWT.FILL, SWT.FILL, false, true, 2, 5));
		
		btnCategorizedBy = new Button(composite, SWT.NONE);
		btnCategorizedBy.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, false, false, 1, 1));
		btnCategorizedBy.setText("Add");
		
		text = new Text(composite, SWT.BORDER);
		text.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false, 1, 1));
		new Label(composite, SWT.NONE);
		
		Label lblClusterBarsBy = new Label(composite, SWT.NONE);
		lblClusterBarsBy.setText("Cluster bars by:");
		
		btnClusterBarsBy = new Button(composite, SWT.NONE);
		btnClusterBarsBy.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, false, false, 1, 1));
		btnClusterBarsBy.setText("Add");
		
		lstClusterBarsBy = new List(composite, SWT.BORDER);
		lstClusterBarsBy.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true, 1, 1));
		new Label(composite, SWT.NONE);
		
		Label lblGroupBy = new Label(composite, SWT.NONE);
		lblGroupBy.setText("Group by:");
		
		btnGroupBy = new Button(composite, SWT.NONE);
		btnGroupBy.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, false, false, 1, 1));
		btnGroupBy.setText("Add");
		
		txtGroupBy = new Text(composite, SWT.BORDER);
		txtGroupBy.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false, 1, 1));
		
		TabItem tbtmDisplayOptions = new TabItem(tabFolder, SWT.NONE);
		tbtmDisplayOptions.setText("Display Options");
		
		Composite composite_1 = new Composite(tabFolder, SWT.NONE);
		tbtmDisplayOptions.setControl(composite_1);
		composite_1.setLayout(new GridLayout(2, false));
		
		Label lblMainTitle = new Label(composite_1, SWT.NONE);
		lblMainTitle.setLayoutData(new GridData(SWT.RIGHT, SWT.CENTER, false, false, 1, 1));
		lblMainTitle.setText("Main Title:");
		
		txtMainTitle = new Text(composite_1, SWT.BORDER);
		txtMainTitle.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false, 1, 1));
		
		Label lblCategoryAxisLabel = new Label(composite_1, SWT.NONE);
		lblCategoryAxisLabel.setLayoutData(new GridData(SWT.RIGHT, SWT.CENTER, false, false, 1, 1));
		lblCategoryAxisLabel.setText("Category Axis Label:");
		
		txtCategoryAxisLabel = new Text(composite_1, SWT.BORDER);
		txtCategoryAxisLabel.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false, 1, 1));
		new Label(composite_1, SWT.NONE);
		
		btnDisplayLevels = new Button(composite_1, SWT.CHECK);
		btnDisplayLevels.setText("Display levels");
		
		Label lblValueAxis = new Label(composite_1, SWT.NONE);
		lblValueAxis.setText("Value Axis:");
		new Label(composite_1, SWT.NONE);
		
		tblValueAxis = new Table(composite_1, SWT.BORDER | SWT.FULL_SELECTION);
		GridData gd_tblValueAxis = new GridData(SWT.FILL, SWT.FILL, true, true, 2, 1);
		gd_tblValueAxis.heightHint = 100;
		tblValueAxis.setLayoutData(gd_tblValueAxis);
		tblValueAxis.setHeaderVisible(true);
		tblValueAxis.setLinesVisible(true);
		
		TableColumn tblclmnVariable = new TableColumn(tblValueAxis, SWT.CENTER);
		tblclmnVariable.setWidth(100);
		tblclmnVariable.setText("Variable");
		
		TableColumn tblclmnAxisLabel = new TableColumn(tblValueAxis, SWT.CENTER);
		tblclmnAxisLabel.setWidth(112);
		tblclmnAxisLabel.setText("Axis Label");
		
		TableColumn tblclmnLowerLimit = new TableColumn(tblValueAxis, SWT.CENTER);
		tblclmnLowerLimit.setWidth(144);
		tblclmnLowerLimit.setText("Lower Limit");
		
		TableColumn tblclmnUpperLimit = new TableColumn(tblValueAxis, SWT.CENTER);
		tblclmnUpperLimit.setWidth(171);
		tblclmnUpperLimit.setText("Upper Limit");
		
		Label lblAxisLabelOrientation = new Label(composite_1, SWT.NONE);
		lblAxisLabelOrientation.setLayoutData(new GridData(SWT.RIGHT, SWT.CENTER, false, false, 1, 1));
		lblAxisLabelOrientation.setText("Axis label orientation:");
		
		cmbAxisLabelOrientation = new Combo(composite_1, SWT.READ_ONLY);
		cmbAxisLabelOrientation.setItems(new String[] {"parellel to axis", "horizontal", "vertical", "perpendicular to axis"});
		cmbAxisLabelOrientation.setLayoutData(new GridData(SWT.LEFT, SWT.CENTER, true, false, 1, 1));
		cmbAxisLabelOrientation.select(0);
		cmbAxisLabelOrientation.setText("parallel to axis");
		
		btnDrawBoxAround = new Button(composite_1, SWT.CHECK);
		btnDrawBoxAround.setText("Draw box around plot");
		new Label(composite_1, SWT.NONE);
		
		btnShowLegend = new Button(composite_1, SWT.CHECK);
		btnShowLegend.setText("Show legend");
		new Label(composite_1, SWT.NONE);
		
		Composite composite_2 = new Composite(composite_1, SWT.NONE);
		composite_2.setLayout(new GridLayout(8, false));
		composite_2.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true, 2, 1));
		new Label(composite_2, SWT.NONE);
		
		Label lblPosition = new Label(composite_2, SWT.NONE);
		lblPosition.setText("Position:");
		new Label(composite_2, SWT.NONE);
		
		combo = new Combo(composite_2, SWT.READ_ONLY);
		combo.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false, 1, 1));
		new Label(composite_2, SWT.NONE);
		
		Label lblAlignment = new Label(composite_2, SWT.NONE);
		lblAlignment.setLayoutData(new GridData(SWT.RIGHT, SWT.CENTER, false, false, 1, 1));
		lblAlignment.setText("Alignment:");
		new Label(composite_2, SWT.NONE);
		
		combo_1 = new Combo(composite_2, SWT.READ_ONLY);
		combo_1.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false, 1, 1));
		new Label(composite_2, SWT.NONE);
		
		Label lblTitle = new Label(composite_2, SWT.NONE);
		lblTitle.setText("Title:");
		new Label(composite_2, SWT.NONE);
		
		txtLegendTitle = new Text(composite_2, SWT.BORDER);
		txtLegendTitle.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false, 5, 1));
		
		btnDisplayMultipleGraphs = new Button(composite_1, SWT.CHECK);
		btnDisplayMultipleGraphs.setLayoutData(new GridData(SWT.LEFT, SWT.CENTER, false, false, 2, 1));
		btnDisplayMultipleGraphs.setText("Display multiple graphs in a page");
		
		Composite composite_3 = new Composite(composite_1, SWT.NONE);
		composite_3.setLayout(new GridLayout(5, false));
		composite_3.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true, 2, 1));
		new Label(composite_3, SWT.NONE);
		
		Label lblNumberOfRows = new Label(composite_3, SWT.NONE);
		lblNumberOfRows.setText("Number of rows:");
		
		sprTotalRows = new Spinner(composite_3, SWT.BORDER);
		
		Label lblNumberOfColumns = new Label(composite_3, SWT.RIGHT);
		GridData gd_lblNumberOfColumns = new GridData(SWT.RIGHT, SWT.CENTER, false, false, 1, 1);
		gd_lblNumberOfColumns.widthHint = 183;
		lblNumberOfColumns.setLayoutData(gd_lblNumberOfColumns);
		lblNumberOfColumns.setText("Number of columns:");
		
		sprTotalColumns = new Spinner(composite_3, SWT.BORDER);
		new Label(composite_3, SWT.NONE);
		
		Label lblOrientation = new Label(composite_3, SWT.NONE);
		lblOrientation.setLayoutData(new GridData(SWT.RIGHT, SWT.CENTER, false, false, 1, 1));
		lblOrientation.setText("Orientation:");
		
		cmbOrientation = new Combo(composite_3, SWT.NONE);
		cmbOrientation.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false, 1, 1));
		new Label(composite_3, SWT.NONE);
		new Label(composite_3, SWT.NONE);
		
		TabItem tbtmOtherOptions = new TabItem(tabFolder, SWT.NONE);
		tbtmOtherOptions.setText("Other Options");
		
		Composite composite_4 = new Composite(tabFolder, SWT.NONE);
		tbtmOtherOptions.setControl(composite_4);
		composite_4.setLayout(new GridLayout(3, false));
		
		Group grpConfigureBars = new Group(composite_4, SWT.NONE);
		grpConfigureBars.setLayout(new GridLayout(1, false));
		GridData gd_grpConfigureBars = new GridData(SWT.FILL, SWT.FILL, true, true, 2, 3);
		gd_grpConfigureBars.widthHint = 502;
		grpConfigureBars.setLayoutData(gd_grpConfigureBars);
		grpConfigureBars.setText("Configure Bars");
		
		Group grpOrientation = new Group(grpConfigureBars, SWT.NONE);
		grpOrientation.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false, 1, 1));
		grpOrientation.setText("Orientation");
		grpOrientation.setLayout(new GridLayout(1, false));
		
		btnOrientationVertical = new Button(grpOrientation, SWT.RADIO);
		btnOrientationVertical.setLayoutData(new GridData(SWT.LEFT, SWT.CENTER, true, false, 1, 1));
		btnOrientationVertical.setText("Vertical");
		
		btnOrientationHorizontal = new Button(grpOrientation, SWT.RADIO);
		btnOrientationHorizontal.setLayoutData(new GridData(SWT.LEFT, SWT.CENTER, true, false, 1, 1));
		btnOrientationHorizontal.setText("Horizontal");
		
		Group grpStyle = new Group(grpConfigureBars, SWT.NONE);
		grpStyle.setLayout(new GridLayout(1, false));
		grpStyle.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false, 1, 1));
		grpStyle.setText("Style");
		
		btnStyleClustered = new Button(grpStyle, SWT.RADIO);
		btnStyleClustered.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false, 1, 1));
		btnStyleClustered.setText("Clustered");
		
		btnStyleStacked = new Button(grpStyle, SWT.RADIO);
		btnStyleStacked.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false, 1, 1));
		btnStyleStacked.setText("Stacked");
		
		Group grpColorAndFill = new Group(grpConfigureBars, SWT.NONE);
		grpColorAndFill.setText("Color and Fill");
		grpColorAndFill.setLayout(new GridLayout(1, false));
		grpColorAndFill.setLayoutData(new GridData(SWT.FILL, SWT.FILL, false, true, 1, 1));
		
		tblColorAndFill = new Table(grpColorAndFill, SWT.BORDER | SWT.FULL_SELECTION);
		tblColorAndFill.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true, 1, 1));
		tblColorAndFill.setHeaderVisible(true);
		tblColorAndFill.setLinesVisible(true);
		
		TableColumn tblclmnLevel = new TableColumn(tblColorAndFill, SWT.NONE);
		tblclmnLevel.setWidth(143);
		tblclmnLevel.setText("Level");
		
		TableColumn tblclmnColor = new TableColumn(tblColorAndFill, SWT.NONE);
		tblclmnColor.setWidth(171);
		tblclmnColor.setText("Color");
		
		TableColumn tblclmnFillPattern = new TableColumn(tblColorAndFill, SWT.NONE);
		tblclmnFillPattern.setWidth(179);
		tblclmnFillPattern.setText("Fill Pattern");
		
		btnDisplayErrorBars = new Button(composite_4, SWT.CHECK);
		btnDisplayErrorBars.setText("Display Error Bars");
		
		Group grpErrorBars = new Group(composite_4, SWT.NONE);
		grpErrorBars.setLayout(new GridLayout(3, false));
		grpErrorBars.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true, 1, 1));
		grpErrorBars.setText("Error Bars");
		
		btnConfidenceLevel = new Button(grpErrorBars, SWT.RADIO);
		btnConfidenceLevel.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false, 3, 1));
		btnConfidenceLevel.setText("Confidence Level");
		new Label(grpErrorBars, SWT.NONE);
		
		Label lblLevel = new Label(grpErrorBars, SWT.NONE);
		lblLevel.setText("Level (%):");
		
		sprConfidenceLevel = new Spinner(grpErrorBars, SWT.BORDER);
		
		btnStandardError = new Button(grpErrorBars, SWT.RADIO);
		btnStandardError.setLayoutData(new GridData(SWT.LEFT, SWT.CENTER, false, false, 3, 1));
		btnStandardError.setText("Standard Error");
		new Label(grpErrorBars, SWT.NONE);
		
		Label lblMultiplier = new Label(grpErrorBars, SWT.NONE);
		lblMultiplier.setText("Multiplier:");
		
		sprStandardErrorMultiplier = new Spinner(grpErrorBars, SWT.BORDER);
		
		btnStandardDeviation = new Button(grpErrorBars, SWT.RADIO);
		btnStandardDeviation.setLayoutData(new GridData(SWT.LEFT, SWT.CENTER, false, false, 3, 1));
		btnStandardDeviation.setText("Standard Deviation");
		new Label(grpErrorBars, SWT.NONE);
		
		Label lblMultiplier_1 = new Label(grpErrorBars, SWT.NONE);
		lblMultiplier_1.setText("Multiplier");
		
		sprStandardDeviationMultiplier = new Spinner(grpErrorBars, SWT.BORDER);
		
		Label lblNewLabel = new Label(composite_4, SWT.NONE);
		GridData gd_lblNewLabel = new GridData(SWT.FILL, SWT.FILL, true, true, 1, 1);
		gd_lblNewLabel.heightHint = 229;
		lblNewLabel.setLayoutData(gd_lblNewLabel);

		return container;
	}

	/**
	 * Create contents of the button bar.
	 * @param parent
	 */
	@Override
	protected void createButtonsForButtonBar(Composite parent) {
		createButton(parent, IDialogConstants.OK_ID, IDialogConstants.OK_LABEL,
				true);
		createButton(parent, IDialogConstants.CANCEL_ID,
				IDialogConstants.CANCEL_LABEL, false);
	}

	/**
	 * Return the initial size of the dialog.
	 */
	@Override
	protected Point getInitialSize() {
		return new Point(810, 625);
	}
}
