package org.irri.breedingtool.star.analysis.dialog;

import java.io.File;

import org.eclipse.jface.dialogs.Dialog;
import org.eclipse.jface.dialogs.IDialogConstants;
import org.eclipse.jface.viewers.ListViewer;
import org.eclipse.swt.SWT;
import org.eclipse.swt.events.SelectionAdapter;
import org.eclipse.swt.events.SelectionEvent;
import org.eclipse.swt.graphics.Point;
import org.eclipse.swt.layout.FillLayout;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.widgets.Combo;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Control;
import org.eclipse.swt.widgets.Group;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.widgets.List;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.TabFolder;
import org.eclipse.swt.widgets.TabItem;
import org.eclipse.swt.widgets.Text;
import org.eclipse.wb.swt.SWTResourceManager;
import org.irri.breedingtool.application.handler.PartStackHandler;
import org.irri.breedingtool.datamanipulation.dialog.OperationProgressDialog;
import org.irri.breedingtool.projectexplorer.view.ProjectExplorerView;
import org.irri.breedingtool.utility.DialogFormUtility;
import org.irri.breedingtool.utility.StarAnalysisUtilities;

public class PrincipalComponentAnalysisDialog extends Dialog {

	/**
	 * Create the dialog.
	 * @param parentShell
	 */
	
	private String filePath = PartStackHandler.getActiveElementID();
	private DialogFormUtility listManager = new DialogFormUtility();
	private Button btnOkay;
	private Button btnScreePlot;
	private Button btnBiplot;
	private Button btnPcaPlot;
	private Button btnCorr;
	private Button btnCov;
	private Combo cmboTransformation;
	private Label lblTransformation;
	private Group grpAnalyze;
	private Group grpGraph;
	private TabItem tbtmVariableDescription_1;
	private Composite composite_2;
	private Label lblNumericVariables;
	private Label lblSelectedVariables;
	private List lstSelectedVariables;
	private ListViewer listViewer_2;
	private List lstNumericVariables;
	private ListViewer listViewer_3;
	private Button btnAddNumeric;
	private Button btnSetToFactor;
	private Label lblFactors;
	private List lstFactors;
	private ListViewer listViewer_4;
	private Button btnAddFactor;
	private Label lblIdvar;
	private Text txtIdvar;
	private Label lblNewLabel;
	private Group group;
	private Button btnSavePcScores;
	private String[] Transformations = {"zerocenter", "unitvar", "none"};
		
	public PrincipalComponentAnalysisDialog(Shell parentShell) {
		super(parentShell);
		setShellStyle(SWT.DIALOG_TRIM | SWT.MIN | SWT.RESIZE);
	}
	protected void configureShell(Shell shell) {
		super.configureShell(shell);
		shell.setText("Principal Component Analysis : " + new File (filePath).getName());
	}
	/**
	 * Create contents of the dialog.
	 * @param parent
	 */
	@Override
	protected Control createDialogArea(Composite parent) {
		Composite container = (Composite) super.createDialogArea(parent);
		FillLayout fl_container = new FillLayout(SWT.HORIZONTAL);
		fl_container.marginHeight = 8;
		fl_container.marginWidth = 8;
		container.setLayout(fl_container);
		
		TabFolder tabFolder = new TabFolder(container, SWT.NONE);
		tabFolder.setBackground(SWTResourceManager.getColor(SWT.COLOR_WIDGET_BACKGROUND));
		
		tbtmVariableDescription_1 = new TabItem(tabFolder, SWT.NONE);
		tbtmVariableDescription_1.setText("Variable Description");
		
		composite_2 = new Composite(tabFolder, SWT.NONE);
		tbtmVariableDescription_1.setControl(composite_2);
		GridLayout gl_composite_2 = new GridLayout(4, false);
		composite_2.setLayout(gl_composite_2);
		
		lblNumericVariables = new Label(composite_2, SWT.NONE);
		GridData gd_lblNumericVariables = new GridData(SWT.LEFT, SWT.CENTER, true, false, 1, 1);
		gd_lblNumericVariables.horizontalIndent = 5;
		lblNumericVariables.setLayoutData(gd_lblNumericVariables);
		lblNumericVariables.setText("Numeric Variable(s):");
		lblNumericVariables.setFont(SWTResourceManager.getFont("Tahoma", 10, SWT.NORMAL));
		new Label(composite_2, SWT.NONE);
		
		lblSelectedVariables = new Label(composite_2, SWT.NONE);
		lblSelectedVariables.setLayoutData(new GridData(SWT.LEFT, SWT.CENTER, true, false, 1, 1));
		lblSelectedVariables.setText("Selected Variables:");
		lblSelectedVariables.setFont(SWTResourceManager.getFont("Tahoma", 10, SWT.NORMAL));
		new Label(composite_2, SWT.NONE);
		
		listViewer_3 = new ListViewer(composite_2, SWT.BORDER | SWT.H_SCROLL | SWT.V_SCROLL | SWT.MULTI);
		lstNumericVariables = listViewer_3.getList();
		GridData gd_lstNumericVariables = new GridData(SWT.FILL, SWT.FILL, true, true, 1, 1);
		gd_lstNumericVariables.horizontalIndent = 5;
		gd_lstNumericVariables.heightHint = 130;
		gd_lstNumericVariables.widthHint = 100;
		lstNumericVariables.setLayoutData(gd_lstNumericVariables);
		lstNumericVariables.setItems(new String[] {});
		
		btnAddNumeric = new Button(composite_2, SWT.NONE);
		GridData gd_btnAddNumeric = new GridData(SWT.FILL, SWT.CENTER, false, false, 1, 1);
		gd_btnAddNumeric.widthHint = 90;
		btnAddNumeric.setLayoutData(gd_btnAddNumeric);
		btnAddNumeric.setText("Add");
		
		listViewer_2 = new ListViewer(composite_2, SWT.BORDER | SWT.H_SCROLL | SWT.V_SCROLL | SWT.MULTI);
		lstSelectedVariables = listViewer_2.getList();
		GridData gd_lstSelectedVariables = new GridData(SWT.FILL, SWT.FILL, true, true, 1, 1);
		gd_lstSelectedVariables.heightHint = 130;
		gd_lstSelectedVariables.widthHint = 100;
		lstSelectedVariables.setLayoutData(gd_lstSelectedVariables);
		lstSelectedVariables.setItems(new String[] {});
		
		lblNewLabel = new Label(composite_2, SWT.NONE);
		GridData gd_lblNewLabel = new GridData(SWT.LEFT, SWT.CENTER, false, false, 1, 1);
		gd_lblNewLabel.widthHint = 2;
		lblNewLabel.setLayoutData(gd_lblNewLabel);
		
		btnSetToFactor = new Button(composite_2, SWT.NONE);
		GridData gd_btnSetToFactor = new GridData(SWT.RIGHT, SWT.CENTER, true, false, 1, 1);
		gd_btnSetToFactor.widthHint = 110;
		btnSetToFactor.setLayoutData(gd_btnSetToFactor);
		btnSetToFactor.setText("Set to Factor");
		new Label(composite_2, SWT.NONE);
		new Label(composite_2, SWT.NONE);
		new Label(composite_2, SWT.NONE);
		
		lblFactors = new Label(composite_2, SWT.NONE);
		GridData gd_lblFactors = new GridData(SWT.LEFT, SWT.CENTER, true, false, 1, 1);
		gd_lblFactors.horizontalIndent = 5;
		lblFactors.setLayoutData(gd_lblFactors);
		lblFactors.setText("Factor(s):");
		lblFactors.setFont(SWTResourceManager.getFont("Tahoma", 10, SWT.NORMAL));
		new Label(composite_2, SWT.NONE);
		
		lblIdvar = new Label(composite_2, SWT.NONE);
		lblIdvar.setLayoutData(new GridData(SWT.LEFT, SWT.CENTER, true, false, 1, 1));
		lblIdvar.setText("ID Variable:");
		lblIdvar.setFont(SWTResourceManager.getFont("Tahoma", 10, SWT.NORMAL));
		new Label(composite_2, SWT.NONE);
		
		listViewer_4 = new ListViewer(composite_2, SWT.BORDER | SWT.H_SCROLL | SWT.V_SCROLL | SWT.MULTI);
		lstFactors = listViewer_4.getList();
		GridData gd_lstFactors = new GridData(SWT.FILL, SWT.FILL, true, true, 1, 1);
		gd_lstFactors.widthHint = 100;
		gd_lstFactors.heightHint = 90;
		gd_lstFactors.verticalIndent = 2;
		gd_lstFactors.horizontalIndent = 5;
		lstFactors.setLayoutData(gd_lstFactors);
		lstFactors.setItems(new String[] {});
		
		btnAddFactor = new Button(composite_2, SWT.NONE);
		GridData gd_btnAddFactor = new GridData(SWT.FILL, SWT.TOP, false, false, 1, 1);
		gd_btnAddFactor.widthHint = 90;
		btnAddFactor.setLayoutData(gd_btnAddFactor);
		btnAddFactor.setText("Add");
		
		txtIdvar = new Text(composite_2, SWT.BORDER);
		txtIdvar.setBackground(SWTResourceManager.getColor(SWT.COLOR_WHITE));
		txtIdvar.setEditable(false);
		GridData gd_txtIdvar = new GridData(SWT.FILL, SWT.TOP, true, true, 1, 1);
		gd_txtIdvar.widthHint = 100;
		txtIdvar.setLayoutData(gd_txtIdvar);
		new Label(composite_2, SWT.NONE);
		
		TabItem tbtmOptions_1 = new TabItem(tabFolder, SWT.NONE);
		tbtmOptions_1.setText("Options");
		
		Composite composite_1 = new Composite(tabFolder, SWT.NONE);
		tbtmOptions_1.setControl(composite_1);
		composite_1.setLayout(new GridLayout(1, false));
		
		grpAnalyze = new Group(composite_1, SWT.NONE);
		grpAnalyze.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false, 1, 1));
		grpAnalyze.setLayout(new GridLayout(2, false));
		grpAnalyze.setText("Analyze");
		
		btnCorr = new Button(grpAnalyze, SWT.RADIO);
		btnCorr.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				lblTransformation.setEnabled(false);
				cmboTransformation.setEnabled(false);
			}
		});
		btnCorr.setSelection(true);
		btnCorr.setText("Correlation Matrix");
		new Label(grpAnalyze, SWT.NONE);
		
		btnCov = new Button(grpAnalyze, SWT.RADIO);
		btnCov.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				lblTransformation.setEnabled(true);
				cmboTransformation.setEnabled(true);
			}
		});
		btnCov.setText("Variance Covariance Matrix");
		new Label(grpAnalyze, SWT.NONE);
		
		lblTransformation = new Label(grpAnalyze, SWT.NONE);
		lblTransformation.setEnabled(false);
		lblTransformation.setLayoutData(new GridData(SWT.RIGHT, SWT.CENTER, false, false, 1, 1));
		lblTransformation.setText("Transformation");
		
		cmboTransformation = new Combo(grpAnalyze, SWT.READ_ONLY);
		cmboTransformation.setEnabled(false);
		cmboTransformation.setItems(new String[] {"Zero - Centered", "Unit Variance", "No transformation"});
		GridData gd_cmboTransformation = new GridData(SWT.LEFT, SWT.CENTER, true, false, 1, 1);
		gd_cmboTransformation.widthHint = 100;
		cmboTransformation.setLayoutData(gd_cmboTransformation);
		cmboTransformation.select(0);
		
		grpGraph = new Group(composite_1, SWT.NONE);
		grpGraph.setLayoutData(new GridData(SWT.FILL, SWT.FILL, false, false, 1, 1));
		grpGraph.setText("Graph");
		grpGraph.setLayout(new GridLayout(1, false));
		
		btnScreePlot = new Button(grpGraph, SWT.CHECK);
		btnScreePlot.setText("Scree Plot");
		btnScreePlot.setSelection(true);
		btnScreePlot.setFont(SWTResourceManager.getFont("Tahoma", 8, SWT.NORMAL));
		
		btnBiplot = new Button(grpGraph, SWT.CHECK);
		btnBiplot.setLayoutData(new GridData(SWT.LEFT, SWT.TOP, false, false, 1, 1));
		btnBiplot.setText("Biplot");
		btnBiplot.setFont(SWTResourceManager.getFont("Tahoma", 8, SWT.NORMAL));
		
		btnPcaPlot = new Button(grpGraph, SWT.CHECK);
		btnPcaPlot.setText("PCA Plot");
		btnPcaPlot.setFont(SWTResourceManager.getFont("Tahoma", 8, SWT.NORMAL));
		
		group = new Group(composite_1, SWT.NONE);
		group.setLayoutData(new GridData(SWT.FILL, SWT.FILL, false, false, 1, 1));
		group.setLayout(new GridLayout(1, false));
		
		btnSavePcScores = new Button(group, SWT.CHECK);
		btnSavePcScores.setText("Save PC Scores to a file");
		btnSavePcScores.setSelection(true);
		btnSavePcScores.setFont(SWTResourceManager.getFont("Tahoma", 8, SWT.NORMAL));
		initializeContent();
		return container;
	}

	void initializeContent(){
		listManager.initializeSingleButtonList(lstNumericVariables, lstSelectedVariables, btnAddNumeric);
		listManager.initializeSingleSelectionList(lstFactors, txtIdvar, btnAddFactor);
		listManager.initializeVariableMoveList(lstNumericVariables, lstFactors, btnSetToFactor , filePath);
		listManager.initializeNumericList(lstNumericVariables, filePath);
		listManager.initializeFactorList(lstFactors, filePath);	

	}
	
	
	void resetDialog(){
		lstNumericVariables.removeAll();
		lstSelectedVariables.removeAll();
		lstFactors.removeAll();
		txtIdvar.setText("");
		btnAddNumeric.setText("Add");
		btnAddFactor.setText("Add");
		btnAddFactor.setEnabled(false);
		//btnNormalization.setSelection(true);
		//btnCentralization.setSelection(false);
		btnCorr.setSelection(true);
		btnCov.setSelection(false);
		btnScreePlot.setSelection(true);
		btnBiplot.setSelection(false);
		btnPcaPlot.setSelection(false);
		btnSavePcScores.setSelection(true);
		listManager.initializeNumericList(lstNumericVariables, filePath);
		listManager.initializeFactorList(lstFactors, filePath);
	}
	
	@Override
	protected void buttonPressed(int ID){
		if(ID == IDialogConstants.OK_ID){
			okPressed();
		}
		else if(ID == IDialogConstants.CANCEL_ID){
			cancelPressed();
		}
		else if(ID == IDialogConstants.RETRY_ID){
			resetDialog();
			
		}
	}
	
	@Override
	protected void okPressed(){
		
		String outputFolder = StarAnalysisUtilities.createOutputFolder(filePath, "PrincipalComponentAnalysis");
		OperationProgressDialog rInfo = new OperationProgressDialog(
				getShell(), "Star Analysis");
		rInfo.open();
		
		btnOkay.setEnabled(false);
		String dataFileName = filePath.replace(File.separator, "/");
		String outputPath = outputFolder;
		String[] var = lstSelectedVariables.getItems();
		String idVar = txtIdvar.getText();
		
		boolean saveScore = btnSavePcScores.getSelection();	
		boolean scree = btnScreePlot.getSelection();
		boolean biplot = btnBiplot.getSelection();
		boolean pcaplot = btnPcaPlot.getSelection();
		String matx = "corr";
		String transform= "zerocenter";
		
		if(btnCov.getSelection()){		
			 matx = "cov";
			 transform = Transformations[cmboTransformation.getSelectionIndex()];
		}
		
		StarAnalysisUtilities.testVarArgs(
				dataFileName, 
				outputPath.replace(File.separator, "/"),
				var, 
				idVar,
				matx,
				transform,
				saveScore,
				scree, 
				biplot, 
				pcaplot);
		ProjectExplorerView.rJavaManager.getSTARAnalysisManager().doPCA(
				dataFileName,
				outputPath.replace(File.separator , "/"),
				var,
				idVar,
				matx,
				transform,
				saveScore,
				scree, 
				biplot, 
				pcaplot);
		this.getShell().setMinimized(true);
		StarAnalysisUtilities.openAndRefreshFolder(outputPath);
		btnOkay.setEnabled(true);
		rInfo.close();
	}

//		if(lstSelectedVariables.getItemCount() >=1){
//			btnOkay.setEnabled(false);
//			String dataFileName = filePath.replace(File.separator, "/");
//			String outputPath = outputFolder;
//			String[] var = lstSelectedVariables.getItems();
//			String idVar = txtIdvar.getText();
//			String matx = "corr";
//			String transform= "zerocenter";
//			if (btnCov.getSelection()) transform = cmboTransformation.getText();
//
//			boolean saveScore = btnSavePcScores.getSelection();	
//			boolean scree = btnScreePlot.getSelection();
//			boolean biplot = btnBiplot.getSelection();
//			boolean pcaplot = btnPcaPlot.getSelection();
//			
//			StarAnalysisUtilities.testVarArgs(
//					dataFileName, 
//					outputPath.replace(File.separator, "/"),
//					var, 
//					idVar,
//					matx,
//					transform,
//					saveScore,
//					scree, 
//					biplot, 
//					pcaplot);
//			ProjectExplorerView.rJavaManager.getSTARAnalysisManager().doPCA(
//					dataFileName,
//					outputPath.replace(File.separator , "/"),
//					var,
//					idVar,
//					matx,
//					transform,
//					saveScore,
//					scree, 
//					biplot, 
//					pcaplot);
//			this.getShell().setMinimized(true);
//			StarAnalysisUtilities.openAndRefreshFolder(outputPath);
//			btnOkay.setEnabled(true);
//		}
	
	/**
	 * Create contents of the button bar.
	 * @param parent
	 */
	@Override
	protected void createButtonsForButtonBar(Composite parent) {
		createButton(parent, IDialogConstants.RETRY_ID, "Reset", false);
		btnOkay = createButton(parent, IDialogConstants.OK_ID, IDialogConstants.OK_LABEL,
				true);
		createButton(parent, IDialogConstants.CANCEL_ID,
				IDialogConstants.CANCEL_LABEL, false);
	}
	
	/**
	 * Return the initial size of the dialog.
	 */
	
	@Override
	protected Point getInitialSize() {
		return new Point(461, 478);
	}
}
